import { Count, PostgrestError, Returning } from '../../types';
export declare type UseInsertState<Data = any> = {
    count?: number | null;
    data?: Data | Data[] | null;
    error?: PostgrestError | null;
    fetching: boolean;
};
export declare type UseInsertResponse<Data = any> = [
    UseInsertState<Data>,
    (values: Partial<Data> | Partial<Data>[], options?: UseInsertOptions) => Promise<Pick<UseInsertState<Data>, 'count' | 'data' | 'error'>>
];
export declare type UseInsertOptions = {
    count?: null | Count;
    returning?: Returning;
};
export declare type UseInsertConfig = {
    options?: UseInsertOptions;
};
export declare function useInsert<Data = any>(table: string, config?: UseInsertConfig): UseInsertResponse<Data>;
