import { Count, Filter, PostgrestError } from '../../types';
export declare type UseSelectState<Data = any> = {
    count?: number | null;
    data?: Data[] | null;
    error?: PostgrestError | null;
    fetching: boolean;
    stale: boolean;
};
export declare type UseSelectResponse<Data = any> = [
    UseSelectState<Data>,
    () => Promise<Pick<UseSelectState<Data>, 'count' | 'data' | 'error'> | null>
];
export declare type UseSelectOptions = {
    count?: null | Count;
    head?: boolean;
};
export declare type UseSelectConfig<Data = any> = {
    columns?: string;
    filter?: Filter<Data> | false | null;
    options?: UseSelectOptions;
    pause?: boolean;
};
export declare function useSelect<Data = any>(table: string, config?: UseSelectConfig<Data>): UseSelectResponse<Data>;
