{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoguette/Documents/Projects/todo/src/components/FormRecoveryPass.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { useForm } from \"../hooks/useForm\";\nimport { LoaderIcon } from \"../icons/LoaderIcon\";\nimport { recoveryPassword } from \"../services\";\nimport { UserContext } from \"../services/useContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormRecoveryPass = () => {\n  _s();\n\n  const {\n    session,\n    setSession\n  } = useContext(UserContext);\n  const [formValues, handeInputChange, reset] = useForm({\n    pass: \"\",\n    pass_2: \"\"\n  });\n  const {\n    pass,\n    pass_2\n  } = formValues;\n  useEffect(() => {\n    setSession({\n      log: null,\n      loading: false,\n      data: null\n    }); // eslint-disable-next-line\n  }, []);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    setSession({\n      log: null,\n      loading: true,\n      data: null\n    });\n    setTimeout(() => {\n      recoveryPassword(formValues.email).then(resp => {\n        setSession({\n          log: \"If this email address was used to create an account, instructions to reset your password will be sent to you. Please check your email.\",\n          loading: false,\n          data: null\n        });\n      });\n      reset();\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex flex-col gap-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      className: \"text-left font-bold\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"pass\",\n      type: \"pass\",\n      name: \"email\",\n      className: \"focus:ring focus:ring-gray-200 w-full px-4 py-2  border border-midnight-500 rounded-md shadow-md outline-none\",\n      placeholder: \"Email\",\n      value: pass,\n      onChange: handeInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"pass_2\",\n      type: \"pass_2\",\n      name: \"pass_2\",\n      className: \"focus:ring focus:ring-gray-200 w-full px-4 py-2  border border-midnight-500 rounded-md shadow-md outline-none\",\n      placeholder: \"Re\",\n      value: pass_2,\n      onChange: handeInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-amaranth-500 px-2 py-2 flex items-center justify-center gap-3 my-4 font-semibold rounded-md text-white\",\n      children: [session.loading && /*#__PURE__*/_jsxDEV(LoaderIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), \"Send Reset Instruccions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormRecoveryPass, \"0LVk7GJJyz5T8L2Dm1/afobRsZU=\", false, function () {\n  return [useForm];\n});\n\n_c = FormRecoveryPass;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRecoveryPass\");","map":{"version":3,"sources":["/Users/eduardoguette/Documents/Projects/todo/src/components/FormRecoveryPass.jsx"],"names":["React","useContext","useEffect","useForm","LoaderIcon","recoveryPassword","UserContext","FormRecoveryPass","session","setSession","formValues","handeInputChange","reset","pass","pass_2","log","loading","data","handleSubmit","evt","preventDefault","setTimeout","email","then","resp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BR,UAAU,CAACK,WAAD,CAA1C;AAEA,QAAM,CAACI,UAAD,EAAaC,gBAAb,EAA+BC,KAA/B,IAAwCT,OAAO,CAAC;AACpDU,IAAAA,IAAI,EAAE,EAD8C;AAEpDC,IAAAA,MAAM,EAAE;AAF4C,GAAD,CAArD;AAIA,QAAM;AAAED,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBJ,UAAzB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC;AACTM,MAAAA,GAAG,EAAE,IADI;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAD,CAAV,CADc,CAMd;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,YAAY,GAAG,MAAOC,GAAP,IAAe;AAClCA,IAAAA,GAAG,CAACC,cAAJ;AACAX,IAAAA,UAAU,CAAC;AACTM,MAAAA,GAAG,EAAE,IADI;AAETC,MAAAA,OAAO,EAAE,IAFA;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAD,CAAV;AAKAI,IAAAA,UAAU,CAAC,MAAM;AACfhB,MAAAA,gBAAgB,CAACK,UAAU,CAACY,KAAZ,CAAhB,CAAmCC,IAAnC,CAAyCC,IAAD,IAAU;AAChDf,QAAAA,UAAU,CAAC;AACTM,UAAAA,GAAG,EAAE,wIADI;AAETC,UAAAA,OAAO,EAAE,KAFA;AAGTC,UAAAA,IAAI,EAAE;AAHG,SAAD,CAAV;AAKD,OAND;AAOAL,MAAAA,KAAK;AACN,KATS,EASP,IATO,CAAV;AAUD,GAjBD;;AAkBA,sBACE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAA8B,IAAA,SAAS,EAAC,qBAAxC;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,SAAS,EAAC,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,EAAC,+GAJZ;AAKE,MAAA,WAAW,EAAC,OALd;AAME,MAAA,KAAK,EAAEL,IANT;AAOE,MAAA,QAAQ,EAAEF;AAPZ;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,SAAS,EAAC,+GAJZ;AAKE,MAAA,WAAW,EAAC,IALd;AAME,MAAA,KAAK,EAAEG,MANT;AAOE,MAAA,QAAQ,EAAEH;AAPZ;AAAA;AAAA;AAAA;AAAA,YAbF,eAsBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,2GAFZ;AAAA,iBAIGH,OAAO,CAACQ,OAAR,iBAAmB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAnEM;;GAAMT,gB;UAGmCJ,O;;;KAHnCI,gB","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport { LoaderIcon } from \"../icons/LoaderIcon\";\r\nimport { recoveryPassword } from \"../services\";\r\nimport { UserContext } from \"../services/useContext\";\r\n\r\nexport const FormRecoveryPass = () => {\r\n  const { session, setSession } = useContext(UserContext);\r\n\r\n  const [formValues, handeInputChange, reset] = useForm({\r\n    pass: \"\",\r\n    pass_2: \"\",\r\n  });\r\n  const { pass, pass_2 } = formValues;\r\n  useEffect(() => {\r\n    setSession({\r\n      log: null,\r\n      loading: false,\r\n      data: null,\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    setSession({\r\n      log: null,\r\n      loading: true,\r\n      data: null,\r\n    });\r\n    setTimeout(() => {\r\n      recoveryPassword(formValues.email).then((resp) => {\r\n        setSession({\r\n          log: \"If this email address was used to create an account, instructions to reset your password will be sent to you. Please check your email.\",\r\n          loading: false,\r\n          data: null,\r\n        });\r\n      });\r\n      reset();\r\n    }, 1000);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex flex-col gap-1\">\r\n      <label htmlFor=\"email\" className=\"text-left font-bold\">\r\n        Email Address\r\n      </label>\r\n      <input\r\n        id=\"pass\"\r\n        type=\"pass\"\r\n        name=\"email\"\r\n        className=\"focus:ring focus:ring-gray-200 w-full px-4 py-2  border border-midnight-500 rounded-md shadow-md outline-none\"\r\n        placeholder=\"Email\"\r\n        value={pass}\r\n        onChange={handeInputChange}\r\n      />\r\n      <input\r\n        id=\"pass_2\"\r\n        type=\"pass_2\"\r\n        name=\"pass_2\"\r\n        className=\"focus:ring focus:ring-gray-200 w-full px-4 py-2  border border-midnight-500 rounded-md shadow-md outline-none\"\r\n        placeholder=\"Re\"\r\n        value={pass_2}\r\n        onChange={handeInputChange}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-amaranth-500 px-2 py-2 flex items-center justify-center gap-3 my-4 font-semibold rounded-md text-white\"\r\n      >\r\n        {session.loading && <LoaderIcon />}\r\n        Send Reset Instruccions\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}