{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoguette/Documents/Projects/todo/src/components/ActualDate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActualDate = () => {\n  _s();\n\n  const [date, setDtate] = useState({\n    day: \"\",\n    data: \"\"\n  });\n\n  const calculateDay = () => {\n    let dateTop = new Intl.DateTimeFormat(\"en\", {\n      month: \"long\",\n      year: \"numeric\"\n    });\n    let dateBottom = new Intl.DateTimeFormat(\"en\", {\n      weekday: \"short\",\n      day: \"numeric\"\n    });\n    const day = `${dateTop.format(Date.now())}`;\n    const date = `${dateBottom.format(Date.now())}.`;\n    setDtate({\n      day,\n      date\n    });\n  };\n\n  useEffect(() => {\n    calculateDay();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"text-midnight-500 font-bold flex flex-col mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-sans text-lg\",\n      children: [\" \", date.day, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-serif text-6xl\",\n      children: date.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActualDate, \"7mItsks/9X3AP+e5/QxL2DtGJ5w=\");\n\n_c = ActualDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActualDate\");","map":{"version":3,"sources":["/Users/eduardoguette/Documents/Projects/todo/src/components/ActualDate.jsx"],"names":["React","useEffect","useState","ActualDate","date","setDtate","day","data","calculateDay","dateTop","Intl","DateTimeFormat","month","year","dateBottom","weekday","format","Date","now"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC;AAChCI,IAAAA,GAAG,EAAE,EAD2B;AAEhCC,IAAAA,IAAI,EAAE;AAF0B,GAAD,CAAjC;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,OAAO,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAC1CC,MAAAA,KAAK,EAAE,MADmC;AAE1CC,MAAAA,IAAI,EAAE;AAFoC,KAA9B,CAAd;AAKA,QAAIC,UAAU,GAAG,IAAIJ,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAC7CI,MAAAA,OAAO,EAAE,OADoC;AAE7CT,MAAAA,GAAG,EAAE;AAFwC,KAA9B,CAAjB;AAIA,UAAMA,GAAG,GAAK,GAAEG,OAAO,CAACO,MAAR,CAAeC,IAAI,CAACC,GAAL,EAAf,CAA2B,EAA3C;AACA,UAAMd,IAAI,GAAI,GAAEU,UAAU,CAACE,MAAX,CAAkBC,IAAI,CAACC,GAAL,EAAlB,CAA8B,GAA9C;AACAb,IAAAA,QAAQ,CAAC;AACPC,MAAAA,GADO;AAEPF,MAAAA;AAFO,KAAD,CAAR;AAID,GAhBD;;AAiBAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAI,IAAA,SAAS,EAAC,gDAAd;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,sBAAsCJ,IAAI,CAACE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA,gBAAuCF,IAAI,CAACA;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA/BM;;GAAMD,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport const ActualDate = () => {\r\n  const [date, setDtate] = useState({\r\n    day: \"\",\r\n    data: \"\",\r\n  });\r\n  const calculateDay = () => {\r\n    let dateTop = new Intl.DateTimeFormat(\"en\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      \r\n    });\r\n    let dateBottom = new Intl.DateTimeFormat(\"en\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n    const day =  `${dateTop.format(Date.now())}`;\r\n    const date = `${dateBottom.format(Date.now())}.`;\r\n    setDtate({\r\n      day,\r\n      date,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    calculateDay();\r\n  }, []);\r\n  return (\r\n    <h2 className=\"text-midnight-500 font-bold flex flex-col mb-4\">\r\n      <span className=\"font-sans text-lg\"> {date.day} </span>\r\n      <span className=\"font-serif text-6xl\">{date.date}</span>\r\n    </h2>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}