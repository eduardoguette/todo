{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoguette/Documents/Projects/todo/src/HOC/Router.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { SignUp } from \"../pages/SignUp\";\nimport { SignIn } from \"../pages/SignIn\";\nimport { ProfileUser } from \"../components/ProfileUser\";\nimport { ForgotPass } from \"../pages/ForgotPass\";\nimport { TodoApp } from \"../pages/TodoApp\";\nimport { UserContext } from \"../services/useContext\";\nimport { RecoverPass } from \"../pages/RecoverPass\";\nimport NoMatch from \"../pages/NoMatch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Router = () => {\n  _s();\n\n  var _session$log, _session$log2, _session$log3, _session$log4, _session$log5, _session$log6;\n\n  const {\n    session\n  } = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-sans max-w-full min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/profile\",\n          children: ((_session$log = session.log) === null || _session$log === void 0 ? void 0 : _session$log.access_token) ? /*#__PURE__*/_jsxDEV(ProfileUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          children: ((_session$log2 = session.log) === null || _session$log2 === void 0 ? void 0 : _session$log2.access_token) ? /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          children: ((_session$log3 = session.log) === null || _session$log3 === void 0 ? void 0 : _session$log3.access_token) ? /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/password_resets\",\n          children: ((_session$log4 = session.log) === null || _session$log4 === void 0 ? void 0 : _session$log4.access_token) ? /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(ForgotPass, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"type=recovey\",\n          children: ((_session$log5 = session.log) === null || _session$log5 === void 0 ? void 0 : _session$log5.access_token) ? /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(RecoverPass, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: ((_session$log6 = session.log) === null || _session$log6 === void 0 ? void 0 : _session$log6.access_token) ? /*#__PURE__*/_jsxDEV(TodoApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Router, \"A/KJBsfVFp4JDA0vDPZRbHOKG0Y=\");\n\n_c = Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/Users/eduardoguette/Documents/Projects/todo/src/HOC/Router.jsx"],"names":["React","useContext","BrowserRouter","Switch","Route","SignUp","SignIn","ProfileUser","ForgotPass","TodoApp","UserContext","RecoverPass","NoMatch","Router","session","log","access_token"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { SignUp } from \"../pages/SignUp\";\r\nimport { SignIn } from \"../pages/SignIn\";\r\nimport { ProfileUser } from \"../components/ProfileUser\";\r\nimport { ForgotPass } from \"../pages/ForgotPass\";\r\nimport { TodoApp } from \"../pages/TodoApp\";\r\nimport { UserContext } from \"../services/useContext\"; \r\nimport { RecoverPass } from \"../pages/RecoverPass\";\r\nimport NoMatch from \"../pages/NoMatch\";\r\n\r\nexport const Router = () => {\r\n  const { session } = useContext(UserContext);\r\n \r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"font-sans max-w-full min-h-screen bg-gray-50\">\r\n        <Switch>\r\n          <Route exact path=\"/profile\">\r\n            {session.log?.access_token ? <ProfileUser /> : <SignIn />}\r\n          </Route>\r\n          <Route exact path=\"/signin\">\r\n            {session.log?.access_token ? <TodoApp /> : <SignIn />}\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            {session.log?.access_token ? <TodoApp /> : <SignUp />}\r\n          </Route>\r\n          <Route exact path=\"/password_resets\">\r\n            {session.log?.access_token ? <TodoApp /> : <ForgotPass />}\r\n          </Route>\r\n          <Route path=\"type=recovey\">\r\n            {session.log?.access_token ? <TodoApp /> : <RecoverPass />}\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            {session.log?.access_token ? <TodoApp /> : <SignIn />}\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <NoMatch />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}