import { Count, Filter, PostgrestError, Returning } from '../../types';
export declare type UseDeleteState<Data = any> = {
    count?: number | null;
    data?: Data | Data[] | null;
    error?: PostgrestError | null;
    fetching: boolean;
};
export declare type UseDeleteResponse<Data = any> = [
    UseDeleteState<Data>,
    (filter?: Filter<Data>, options?: UseDeleteOptions) => Promise<Pick<UseDeleteState<Data>, 'count' | 'data' | 'error'>>
];
export declare type UseDeleteOptions = {
    count?: null | Count;
    returning?: Returning;
};
export declare type UseDeleteConfig<Data = any> = {
    filter?: Filter<Data>;
    options?: UseDeleteOptions;
};
export declare function useDelete<Data = any>(table: string, config?: UseDeleteConfig<Data>): UseDeleteResponse<Data>;
